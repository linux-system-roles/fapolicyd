---
- name: Basic test for fapolicyd
  hosts: all
  tasks:
    - name: Run tests
      vars:
        __test_fpd_binaries_dir: >-
          {{ __fapolicyd_tmpdir.path }}/executable_binaries
        __test_fpd_source_dir: "{{ __test_fpd_binaries_dir }}/source"
        __test_fpd_source_file: "{{ __test_fpd_source_dir }}/main.c"
        __test_fpd_exe1: "{{ __test_fpd_binaries_dir }}/exe1"
        __test_fpd_exe2: "{{ __test_fpd_binaries_dir }}/exe2"
        __test_fpd_user: fapolicyd_test1_user
      block:
        - name: Create temp test directory
          tempfile:
            path: /var/tmp
            prefix: fapolicyd_
            state: directory
          register: __fapolicyd_tmpdir

        - name: Create directories for executable binaries and source files
          file:
            path: "{{ item }}"
            state: directory
            mode: "0755"
          loop:
            - "{{ __fapolicyd_tmpdir.path }}"
            - "{{ __test_fpd_binaries_dir }}"
            - "{{ __test_fpd_source_dir }}"

        - name: Create C source code (binary1)
          copy:
            content: |
              int main(void) {
                  return 0;
              }
            dest: "{{ __test_fpd_source_file }}"
            mode: "0644"

        - name: Determine if system is ostree and set flag
          when: not __fapolicyd_is_ostree is defined
          block:
            - name: Check if system is ostree
              stat:
                path: /run/ostree-booted
              register: __ostree_booted_stat

            - name: Set flag to indicate system is ostree
              set_fact:
                __fapolicyd_is_ostree: "{{ __ostree_booted_stat.stat.exists }}"

        - name: Install GCC and glibc-devel
          package:
            name:
              - gcc
              - glibc-devel
            state: present
            use: "{{ (__fapolicyd_is_ostree | d(false)) |
                     ternary('ansible.posix.rhel_rpm_ostree', omit) }}"

        - name: Compile C programs (exe1)
          command: >-
            gcc -o {{ __test_fpd_exe1 | quote }}
            {{ __test_fpd_source_file | quote }}
          changed_when: true

        - name: Compile C programs (exe2)
          command: >-
            gcc -g -o {{ __test_fpd_exe2 | quote }}
            {{ __test_fpd_source_file | quote }}
          changed_when: true

        - name: Create a new user
          user:
            name: "{{ __test_fpd_user }}"
            state: present
            shell: /bin/bash

        - name: Run the role
          include_role:
            name: linux-system-roles.fapolicyd
          vars:
            fapolicyd_setup_enable_service: true
            fapolicyd_setup_integrity: sha256
            fapolicyd_setup_trust: rpmdb,file
            fapolicyd_add_trusted_file:
              - /etc/passwd
              - /etc/fapolicyd/fapolicyd.conf
              - /etc/krb5.conf
              - "{{ __test_fpd_exe1 }}"

        - name: Run trusted binary exe1
          command: >-
            su - {{ __test_fpd_user | quote }} -c
            {{ __test_fpd_exe1 | quote }}
          changed_when: false

        - name: Replace binary exe1 with exe2
          copy:
            src: "{{ __test_fpd_exe2 }}"
            dest: "{{ __test_fpd_exe1 }}"
            remote_src: true
            mode: "0755"

        - name: Run untrusted binary exe2
          command: >-
            su - {{ __test_fpd_user | quote }} -c
            {{ __test_fpd_exe2 | quote }}
          register: run_exe
          changed_when: false
          failed_when: run_exe.rc != 126

        - name: Check now untrusted exe1 after replacement
          command: >-
            su - {{ __test_fpd_user | quote }} -c
            {{  __test_fpd_exe1 | quote }}
          register: run_exe
          changed_when: false
          failed_when: run_exe.rc != 126

        - name: Delete binary exe1 from trustdb
          command: fapolicyd-cli -f delete {{ __test_fpd_exe1 | quote }}
          changed_when: true

        - name: Update trustdb
          command: fapolicyd-cli --update
          changed_when: true

        - name: Run untrusted exe1 after removing from trustdb
          command: >-
            su - {{ __test_fpd_user | quote }} -c
            {{ __test_fpd_exe1 | quote }}
          register: run_exe
          changed_when: false
          failed_when: run_exe.rc != 126

        - name: Add binary exe1 to trustdb
          command: fapolicyd-cli -f add {{ __test_fpd_exe1 | quote }}
          changed_when: true

        - name: Update trustdb
          command: fapolicyd-cli --update
          changed_when: true

        - name: Run trusted exe1
          command: >-
            su - {{ __test_fpd_user | quote }} -c
            {{ __test_fpd_exe1 | quote }}
          changed_when: true
      always:
        - name: Clean up temp directory
          file:
            path: "{{ __fapolicyd_tmpdir.path }}"
            state: absent

        - name: Remove test user
          user:
            name: "{{ __test_fpd_user }}"
            state: absent

        - name: Shutdown fapolicyd
          service:
            name: fapolicyd
            state: stopped
            enabled: false
